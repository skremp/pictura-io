<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>    
    
    <parent>
        <groupId>io.pictura</groupId>
        <artifactId>pictura-parent</artifactId>
        <version>1.2.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>pictura-servlet</artifactId>
        
    <name>PicturaIO Servlet</name>
    
    <description>
        On-demand image processing servlet.
    </description>
                
    <packaging>jar</packaging>
    
    <properties>               
        <!--
            Integration test properties.
        -->
        <it.host>localhost</it.host>
        <it.port>8084</it.port>
        <it.libwebp>${basedir}/etc/webp</it.libwebp>
        
        <!--
            Load test properties.
        -->
        <lt.report>${basedir}/target/performance-report.csv</lt.report>
        <lt.response.dir>${basedir}/target/test-responses</lt.response.dir>
    </properties>
           
    <dependencies>   
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
                
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>      
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging-api</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>        
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
                   
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-jpeg2000</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-psd</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-icns</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-core</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>
           
    <build>
        <resources>        
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.js</include>
                </includes>
            </resource>
            
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                    <exclude>**/*.js</exclude>
                </excludes>
            </resource>                   
        </resources>
        
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </testResource>
            
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>
        
        <plugins>                 
            <plugin>                
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>                
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            
            <!--
                Integration tests
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>                
            </plugin>                                   
            
            <!--
                Unit/Integration test reports and code coverage
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>             
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>                
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>                
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>                
            </plugin>
            
            <!--
                JavaScript minification for the bundeled PicturaJS script.
            -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                    </execution>
                </executions>                      
                <configuration>
                    <linebreakpos>-1</linebreakpos>
                    <nosuffix>false</nosuffix>
                    <suffix>.min</suffix>                    
                    <encoding>UTF-8</encoding>
                    <jswarn>false</jswarn>
                    <gzip>false</gzip>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <!--
            Optional profile to use in combination with one of the default
            profiles (develop or release) to obfuscate and optimise the
            compiled binaries.
        -->
        <profile>            
            <id>proguard</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.wvengen</groupId>
                        <artifactId>proguard-maven-plugin</artifactId>
                        <version>2.0.6</version>
                        <dependencies>
                            <dependency>
                                <groupId>net.sf.proguard</groupId>
                                <artifactId>proguard-base</artifactId>
                                <version>4.9</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>proguard</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <proguardVersion>4.9</proguardVersion>
                            <options>
                                <option><![CDATA[
                                    -keepparameternames                                    
                                    -renamesourcefileattribute SourceFile
                                    -keepattributes Exceptions,InnerClasses,Signature,Deprecated,
                                                    SourceFile,LineNumberTable,*Annotation*,EnclosingMethod

                                    -keep class io.pictura.servlet.IIORequestProcessor {
                                        *;
                                    }
                                    
                                    -keep public class * {
                                        public protected *;
                                    }

                                    -keepclassmembernames class * {
                                        java.lang.Class class$(java.lang.String);
                                        java.lang.Class class$(java.lang.String, boolean);
                                    }

                                    -keepclasseswithmembernames class * {
                                        native <methods>;
                                    }

                                    -keepclassmembers,allowoptimization enum * {
                                        public static **[] values();
                                        public static ** valueOf(java.lang.String);
                                    }

                                    -keepclassmembers class * implements java.io.Serializable {
                                        static final long serialVersionUID;
                                        private static final java.io.ObjectStreamField[] serialPersistentFields;
                                        private void writeObject(java.io.ObjectOutputStream);
                                        private void readObject(java.io.ObjectInputStream);
                                        java.lang.Object writeReplace();
                                        java.lang.Object readResolve();
                                    }
                                ]]></option>
                            </options>
                            <libs>
                                <lib>${java.home}/lib/rt.jar</lib>
                                <lib>${java.home}/lib/jce.jar</lib>
                            </libs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>